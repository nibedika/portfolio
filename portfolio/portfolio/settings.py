"""
Django settings for portfolio project.

Generated by 'django-admin startproject' using Django 2.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'gocx6oq^d&vgp034-qx7u@u*gn)y12392psy8g-mu=pr8b985n'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
COMPRESS_ENABLED = True
TEMPLATE_DEBUG = DEBUG
DEBUG_TOOLBAR = False

ALLOWED_HOSTS = ['127.0.0.1', 'nibedika.info', 'www.nibedika.info', 'cloud.mongodb.com', 'www.cloud.mongodb.com']
# ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    # Buildin Apps
    # ============
    # 'redis_cache',
    # 'django_redis',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'compressor',


    # Access Apps
    # ===========
    'apps.access_apps.backend_access', #DONE
    'apps.access_apps.frontend_access', #DONE


    # Backend Business Apps
    # =====================
    'apps.backend_apps.report',
    'apps.backend_apps.appointment', #DONE
    'apps.backend_apps.metting', #DONE
    'apps.backend_apps.note', #DONE
    'apps.backend_apps.familiar', #DONE
    'apps.backend_apps.team', #DONE ~~
    'apps.backend_apps.additional_income', #DONE
    'apps.backend_apps.additional_cost', #DONE
    'apps.backend_apps.email_marketing', #DONE
    'apps.backend_apps.sms_marketing', #DONE
    'apps.backend_apps.business_contact', #DONE
    'apps.backend_apps.privilege', #DONE 
    'apps.backend_apps.setting', #DONE
    'apps.backend_apps.message', #DONE


    # Frontend Apps
    # =============
    'apps.frontend_apps.user_contact', #DONE
    'apps.frontend_apps.resume', #DONE
    'apps.frontend_apps.portfolio', #DONE
    'apps.frontend_apps.service', #DONE
    'apps.frontend_apps.blog', #DONE
]


MIDDLEWARE = [
    'django.middleware.cache.UpdateCacheMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.cache.FetchFromCacheMiddleware',

    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'portfolio.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
                'templates',
                os.path.join(BASE_DIR,'apps/'),
        ],
        'APP_DIRS': False,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.media',
            ],
            'loaders': [
                ('django.template.loaders.cached.Loader', [
                    'django.template.loaders.filesystem.Loader',
                    'django.template.loaders.app_directories.Loader',
                    'django.template.loaders.base.Loader',
                    # 'path.to.custom.Loader',
                ]),
            ],
        },
    },
]


WSGI_APPLICATION = 'portfolio.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#     }
# }

DATABASES = {  
    'default'                   : {  
        'ENGINE'                : 'djongo',  
        'NAME'                  : 'portfolio_db',  
        'USER'                  : 'nibedika',  
        'PASSWORD'              : 'L0XbOj3kzuIhndit',    
        'HOST'                  : 'mongodb://nibedika:<password>@ac-hcz7cow-shard-00-00.fxuvv5d.mongodb.net:27017,ac-hcz7cow-shard-00-01.fxuvv5d.mongodb.net:27017,ac-hcz7cow-shard-00-02.fxuvv5d.mongodb.net:27017/?ssl=true&replicaSet=atlas-eg9k82-shard-0&authSource=admin&retryWrites=true&w=majority',  
        # 'HOST'                  : 'mongodb+srv://nibedika:<password>@nibedika.fxuvv5d.mongodb.net/?retryWrites=true&w=majority',  
        'PORT'                  : 27017,  
        'SUPPORTS_TRANSACTIONS' : False,  
    }  
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

#USE_L10N = True
USE_L10N = False

#USE_TZ = True
USE_TZ = False

DATETIME_FORMAT = 'Y-m-d H:i:s'
DATE_FORMAT = 'Y-m-d'

DURATIONFIELD_ALLOW_YEARS = True

DURATIONFIELD_ALLOW_MONTHS = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'

# For Static File Include From Static Folder
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static/"),
]
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    
    # other finders..
    'compressor.finders.CompressorFinder',
)
COMPRESS_ROOT = os.path.join(BASE_DIR, 'static/')


#For Media File [Uploaded File, Image, Video] Setting
MEDIA_URL = '/media/'

MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')




# For EMAIL Verification System For Django Setting
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_HOST_USER = 'ndsofttechmanagement@gmail.com'
EMAIL_HOST_PASSWORD = 'htmnzsqxpkrykeol'
EMAIL_USE_TLS = True
EMAIL_USE_SSL = False



# For SMS Verification System For Django Setting
# SMS_BACKEND = 'sms.backends.console.SmsBackend'

# pip install "django-sms[twilio]"  (***REQUIRED***)
SMS_BACKEND = 'sms.backends.twilio.SmsBackend'
TWILIO_ACCOUNT_SID = 'AC4bd8ee72ca383cfa6741ecda98f40ba3'
TWILIO_AUTH_TOKEN = 'c273c5f7559da6e7082095599b354193'

